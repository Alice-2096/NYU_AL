version: 0.2
phases:
  install:
    # install dependencies
    runtime-versions:
      nodejs: latest
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      # authentication for ecr to push the image
      - echo push command is $PUSH_TO_ECR_COMMAND
      - echo repo url is $REPO_URL
      - sh -c $PUSH_TO_ECR_COMMAND
      # build code from this repository
      - REPOSITORY_URI=$REPO_URL
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # Give your ECS container name specified in the task definition
      - DOCKER_CONTAINER_NAME=$CONTAINER_NAME
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts: # what to upload to S3 after build
  files:
    - server.js
    - package.json
    - node_modules/*
    - imagedefinitions.json
cache: # cached at S3 for faster build times
  path:
    - node_modules/*
